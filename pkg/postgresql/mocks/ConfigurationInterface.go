// Code generated by mockery v2.26.0. DO NOT EDIT.

package mocks

import (
	postgresql "github.com/cabother/cabother-go-helpers/pkg/postgresql"
	mock "github.com/stretchr/testify/mock"
)

// ConfigurationInterface is an autogenerated mock type for the ConfigurationInterface type
type ConfigurationInterface struct {
	mock.Mock
}

// GetCustomPostgreSQLConfigs provides a mock function with given fields: database, host, username, password
func (_m *ConfigurationInterface) GetCustomPostgreSQLConfigs(database string, host string, username string, password string) *postgresql.MySQLConfig {
	ret := _m.Called(database, host, username, password)

	var r0 *postgresql.MySQLConfig
	if rf, ok := ret.Get(0).(func(string, string, string, string) *postgresql.MySQLConfig); ok {
		r0 = rf(database, host, username, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*postgresql.MySQLConfig)
		}
	}

	return r0
}

// GetDefaultPostgreSQLConfigs provides a mock function with given fields:
func (_m *ConfigurationInterface) GetDefaultPostgreSQLConfigs() *postgresql.MySQLConfig {
	ret := _m.Called()

	var r0 *postgresql.MySQLConfig
	if rf, ok := ret.Get(0).(func() *postgresql.MySQLConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*postgresql.MySQLConfig)
		}
	}

	return r0
}

type mockConstructorTestingTNewConfigurationInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewConfigurationInterface creates a new instance of ConfigurationInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConfigurationInterface(t mockConstructorTestingTNewConfigurationInterface) *ConfigurationInterface {
	mock := &ConfigurationInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
